자바가상머신: 여러 환경에서 자바 프로그램을 실행할 수 있는 환경

JVM: Java Virtual Machine

캡슐화: 객체가 갖는 속성을 외부에서 지정되지 않은 방식으로 임의로 변경할 수 없도록 은닉하는 것
다형성: 하나의 객체가 여러 타입을 갖는 것. 자바에서는 자식 객체가 부모 클래스 타입을 가질 수 있다.
상속: 부모 클래스의 특징을 갖는 자식 클래스를 만드는 것

OOP: Object Oriented Programming(객체지향프로그래밍)
객체를 중심으로 보는 프로그래밍 방법론

오버로딩: 같은 이름과 다른 매개변수를 가진 여러 메서드를 만드는 것
오버라이딩: 상속받은 부모 클래스의 메서드와 같은 이름의 메서드를 만드는것

Servlet과 JSP의 관계: 서블릿은 JSP 문서를 사용하여 html 문서를 동적으로 생성한다.

POST/GET방식의 비교: POST방식으로 data를 전달하면 URI에 포함되지 않고 브라우저 안에서 전달된다.

HTTP의 구조: request/response

Session과 cookie의 공통점 차이점: 상태를 갖지 않고 매번 새로운 연결을 하는 HTTP에서 상태를 저장하기 위해 사용한다.
session은 브라우저가 꺼지면 소멸하고 cookie는 브라우저가 꺼져도 유지된다.

MVC: Model-View-Controller의 약자

MVC1은 JSP문서가 브라우저의 요청을 받아 처리하여 html 문서를 반환한다. JSP문서가 뷰, 모델, 컨트롤러의 역할을 한다.
MVC2는 프론트 컨트롤러 디스패처가 브라우저의 요청을 받아 컨트롤러와 뷰에 적절한 처리를 요청한다. 뷰, 모델, 컨트롤러가 분리되어 있다.

MVT는 Model-View-Template

MVC2와 MVT의 비교: MVC의 뷰가 MVT의 템플릿, MVC의 컨트롤러가 MVT의 뷰에 해당한다.